--SQL 1차 실기테스트

--11.
-- “서가람” 학생의 지도 교수가 지도한 학생들의 년도 별 평점을 표시하는 구문을 작성한다.
-- 평점은 소수점 1 자리까지만 반올림하여 표시 한고 년도를 최근 순으로 정렬 한다.
SELECT SUBSTR(TERM_NO, 1, 4) 년도, ROUND(AVG(POINT), 1)
FROM TB_GRADE
JOIN TB_STUDENT USING (STUDENT_NO)
WHERE COACH_PROFESSOR_NO = (SELECT COACH_PROFESSOR_NO
                                                FROM TB_STUDENT
                                                WHERE STUDENT_NAME = '서가람')
GROUP BY  SUBSTR(TERM_NO, 1, 4)
ORDER BY 1 DESC;

-- 12.
-- 전체 남학생 중 휴학한 학생의 입학 일자를 조회한다.
-- 입학일자가 2001 년 1 월 1 일(포함)부터 현재까지(포함)인 학생만 표시하는 구문을 작성한다.
-- 입학 일자가 최근 순으로 정렬한다.
SELECT DEPARTMENT_NAME 학과명, STUDENT_NAME 학생명, ENTRANCE_DATE 입학일자
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE SUBSTR(STUDENT_SSN, 8, 1) = '1' AND ABSENCE_YN = 'Y'
AND ENTRANCE_DATE >= '010101'
ORDER BY 3 DESC;

-- 13. 모르겠당~~~~~
-- 과목을 하나도 배정 받지 못한 교수가 지도교수인 학생수를 표시하는 구문을 작성한다.
SELECT PROFESSOR_NAME 지도교수, COUNT(STUDENT_NO) 학생수
FROM TB_STUDENT T
JOIN TB_PROFESSOR E USING (DEPARTMENT_NO)
JOIN TB_CLASS_PROFESSOR ON (T.COACH_PROFESSOR_NO = E.PROFESSOR_NO)
WHERE T.COACH_PROFESSOR_NO IN (SELECT PROFESSOR_NO
                                                FROM TB_PROFESSOR E
                                                WHERE NOT EXISTS (SELECT NULL
                                                FROM TB_CLASS_PROFESSOR F
                                                 WHERE E.PROFESSOR_NO = F.PROFESSOR_NO))
GROUP BY PROFESSOR_NAME;                                                 
     
 SELECT    PROFESSOR_NAME 지도교수,
          COUNT(STUDENT_NO) 학생수
FROM      TB_PROFESSOR
LEFT JOIN TB_CLASS_PROFESSOR USING (PROFESSOR_NO)
JOIN      TB_STUDENT ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE     CLASS_NO IS NULL
GROUP BY  PROFESSOR_NAME;                                      
           


-- 과목을 하나도 배정 받지 못한 교수가 지도교수
SELECT PROFESSOR_NO, PROFESSOR_NAME
FROM TB_PROFESSOR E
WHERE NOT EXISTS (SELECT NULL
                            FROM TB_CLASS_PROFESSOR F
                            WHERE E.PROFESSOR_NO = F.PROFESSOR_NO);
     
-- 14.
--“공학”계열의 학생들 중 2009 년도 평점 이 4.0 이상인 학생을 표시하는 구문을 작성한다.
-- 평점은 소수점 1 자리까지만 반올림하여 표시 한다.
-- 점수가 높은 순으로 정렬 하고 같으면 학생이름순(가나다순)으로 정렬 한다.
SELECT STUDENT_NAME 학생이름, TERM_NO 학기, ROUND(AVG(POINT), 1) 평점
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE CATEGORY LIKE '%공학%'
GROUP BY STUDENT_NAME, TERM_NO
HAVING TERM_NO LIKE '2009%'
AND ROUND(AVG(POINT), 1) >= 4.0
ORDER BY 3, 1;



-- 15.
--“김고운” 학생이 있는 과의 2007 년, 2008 년 학기 별 평점과
--년도 별 누적 평점, 총 평점을 표시하는 구문을 작성한다. (평점은 소수점 1 자리까지만 반올림)
SELECT NVL(SUBSTR(TERM_NO, 1, 4), '총 평점') 년도, NVL(SUBSTR(TERM_NO, 5, 2), ' ') 학기, ROUND(AVG(POINT), 1)
FROM TB_GRADE
JOIN TB_STUDENT USING (STUDENT_NO)
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                                    FROM TB_STUDENT
                                    WHERE STUDENT_NAME = '김고운')
AND  SUBSTR(TERM_NO, 1, 4) BETWEEN 2007 AND 2008                                   
GROUP BY ROLLUP(SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2));

--16.
--“문학과생태학” 과목을 진행하는 과의 2004 년도 학기 별 평점과
--총 평점을 표시하는 구문을 작성한다.
--l 평점은 소수점 1 자리까지만 반올림하여 표시 한다
SELECT SUBSTR(TERM_NO, 1, 4) 년도, NVL(SUBSTR(TERM_NO, 5, 2), '-') 학기, ROUND(AVG(POINT), 1) 평점
FROM TB_GRADE
JOIN TB_STUDENT USING (STUDENT_NO)
WHERE TERM_NO LIKE '2004%'
AND DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                                        FROM TB_CLASS
                                        WHERE CLASS_NAME = '문학과생태학')
  
GROUP BY ROLLUP(SUBSTR(TERM_NO, 5, 2)), SUBSTR(TERM_NO, 1, 4);


-- 17.
--학생번호가 총 7 자리이고 'A'로 시작하며 4 번째 자리 데이터가 '3'인 학생 중 지도교수의 성이 '이'씨인
--학생을 학생이름 순(가나다순)으로 표시하는 구문을 작성 하시오.
SELECT STUDENT_NAME 학생이름, PROFESSOR_NAME 지도교수
FROM TB_STUDENT
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO LIKE 'A__3___%'
AND PROFESSOR_NAME LIKE '이%'
ORDER BY 1;                                            
                                       
-- 18.
--“예체능”과 “의학” 계열의 모든 학과를 학과이름과 학생수로 표시하는 구문을 작성 하시오.
--l 계열이름 순(가나다순)으로 정렬 하고 같으면 학생수가 많은 순으로 정렬 한다.
SELECT CATEGORY 계열, DEPARTMENT_NAME 학과이름, COUNT(STUDENT_NO) 학생수
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
WHERE CATEGORY = '예체능' OR CATEGORY = '의학'
GROUP BY CATEGORY, DEPARTMENT_NAME
ORDER BY 1, 3 DESC;

--19.
--‘행정학과’의 모든 과목을 선수 과목과 함께 과목이름순(가나다순)으로 표시하는 구문을 작성 하시오.
--(선수과목이 없을 출력되지 않는다.) 
SELECT CLASS_NAME 과목,  CLASS_NAME = (SELECT
FROM TB_CLASS
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                                        FROM TB_DEPARTMENT
                                        WHERE DEPARTMENT_NAME = '행정학과')
AND PREATTENDING_CLASS_NO IS NOT NULL;


SELECT PREATTENDING_CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;
