--1.
SELECT (
(SELECT COUNT(*) FROM TB_BOOK) +
(SELECT COUNT(*) FROM TB_WRITER) +
(SELECT COUNT(*) FROM TB_PUBLISHER) +
(SELECT COUNT(*) FROM TB_BOOK_AUTHOR)) 전체 FROM DUAL;

-- 2.
SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE, DATA_DEFAULT, NULLABLE, CONSTRAINT_NAME, CONSTRAINT_TYPE, R_CONSTRAINT_NAME
FROM USER_TAB_COLUMNS
JOIN USER_CONSTRAINTS USING (TABLE_NAME);

-- 3.
SELECT BOOK_NO, BOOK_NM
FROM TB_BOOK
WHERE LENGTH(BOOK_NM) >= '25';

--4.
/*SELECT WRITER_NM, OFFICE_TELNO, HOME_TELNO, MOBILE_NO
FROM TB_WRITER
WHERE SUBSTR(MOBILE_NO, 1, 3) = '019'
AND WRITER_NM LIKE '김%'
ORDER BY 1;*/

-- RANK로 풀기
SELECT WRITER_NM, OFFICE_TELNO, HOME_TELNO, MOBILE_NO
FROM (SELECT WRITER_NM, OFFICE_TELNO, HOME_TELNO, MOBILE_NO,
        RANK() OVER(ORDER BY WRITER_NM) AS RANK
        FROM TB_WRITER
        WHERE SUBSTR(MOBILE_NO, 1, 3) = '019'
        AND WRITER_NM LIKE '김%')
WHERE RANK = 1;

-- ROWNUM으로 풀기
SELECT WRITER_NM, OFFICE_TELNO, HOME_TELNO, MOBILE_NO
FROM (SELECT WRITER_NM, OFFICE_TELNO, HOME_TELNO, MOBILE_NO
        FROM TB_WRITER
        WHERE MOBILE_NO LIKE '019%'
        AND WRITER_NM LIKE '김%'
        ORDER BY 1)
WHERE ROWNUM = 1;        

--5. 11번 풀고 나서 조회 X
-- 정은이가 푼 거 참고
SELECT COUNT(*) "작가(명)"
FROM (SELECT DISTINCT WRITER_NO
        FROM TB_BOOK_AUTHOR
        WHERE COMPOSE_TYPE = '옮김') F,
        TB_WRITER W
WHERE F.WRITER_NO = W.WRITER_NO;


SELECT COUNT(*) "작가(명)"
FROM (SELECT WRITER_NO, COUNT(*)
        FROM TB_BOOK_AUTHOR
        WHERE COMPOSE_TYPE = '옮김'
        GROUP BY WRITER_NO);
        
/*SELECT WRITER_NO, COUNT(*)
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE = '옮김'
GROUP BY WRITER_NO;*/

--6.
SELECT COMPOSE_TYPE "저작형태", COUNT(*) "등록도서 수"
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE IS NOT NULL
GROUP BY COMPOSE_TYPE
HAVING COUNT(*) >= 300;

--7.
-- ROWNUM으로 풀기
SELECT BOOK_NM "최신작 이름", ISSUE_DATE 발행일자, PUBLISHER_NM "출판사 이름"
FROM (SELECT BOOK_NM, ISSUE_DATE, PUBLISHER_NM
          FROM TB_BOOK
          ORDER BY 2 DESC)
WHERE ROWNUM = 1;

--RANK로 풀기
SELECT BOOK_NM, ISSUE_DATE, PUBLISHER_NM
FROM (SELECT BOOK_NM, ISSUE_DATE, PUBLISHER_NM, 
            RANK() OVER(ORDER BY ISSUE_DATE DESC) AS RANK
            FROM TB_BOOK)
WHERE RANK = 1;            
            

--8.
SELECT WRITER_NM "작가 이름", C "권 수"
FROM (SELECT WRITER_NO, COUNT(*) C
        FROM TB_BOOK_AUTHOR
        GROUP BY WRITER_NO
        ORDER BY 2 DESC)
JOIN TB_WRITER USING (WRITER_NO)        
WHERE ROWNUM <= 3;

-- 석호가 푼 것 참조
SELECT *
FROM (SELECT WRITER_NM "작가 이름",
          COUNT(BA.WRITER_NO) "권 수"
          FROM TB_WRITER W
          JOIN TB_BOOK_AUTHOR BA ON (W.WRITER_NO = BA.WRITER_NO)
          GROUP BY WRITER_NM
          ORDER BY 2 DESC)
WHERE ROWNUM <= 3;          

--9.
/*SELECT MIN(ISSUE_DATE), WRITER_NM
FROM TB_BOOK
LEFT JOIN TB_BOOK_AUTHOR USING (BOOK_NO)
LEFT JOIN TB_WRITER USING (WRITER_NO)
GROUP BY WRITER_NM;*/

UPDATE TB_WRITER W
SET REGIST_DATE = (SELECT MIN(ISSUE_DATE)
                    FROM TB_BOOK
                    JOIN TB_BOOK_AUTHOR USING (BOOK_NO)
                    WHERE W.WRITER_NO = WRITER_NO
                    GROUP BY WRITER_NO);
                    
COMMIT;   

SELECT WRITER_NM, REGIST_DATE
FROM TB_WRITER;
                    
--10.
CREATE TABLE TB_BOOK_TRANSLATOR(
    BOOK_NO VARCHAR2(10) NOT NULL,
    WRITER_NO VARCHAR2(10) NOT NULL,
    TRANS_LANG VARCHAR(60),
    CONSTRAINT PK_BOOK_TRANSLATOR PRIMARY KEY(BOOK_NO),
    CONSTRAINT FK_BOOK_TRANSLATOR01 FOREIGN KEY(BOOK_NO) REFERENCES TB_BOOK,
    CONSTRAINT FK_BOOK_TRANSLATOR02 FOREIGN KEY(WRITER_NO) REFERENCES TB_WRITER);
    
    DESC TB_BOOK_TRANSLATOR;
    
--11.
INSERT INTO TB_BOOK_TRANSLATOR(BOOK_NO, WRITER_NO)
(SELECT BOOK_NO, WRITER_NO
 FROM TB_BOOK_AUTHOR
 WHERE COMPOSE_TYPE IN ('옮김', '역주', '편역', '공역'));
 
 SELECT * FROM TB_BOOK_TRANSLATOR;
 
 DELETE FROM TB_BOOK_AUTHOR
 WHERE COMPOSE_TYPE IN ('옮김', '역주', '편역', '공역');
 
 --12.
 SELECT BOOK_NM "번역서 이름", WRITER_NM 역자
 FROM TB_BOOK_TRANSLATOR
 JOIN TB_WRITER USING (WRITER_NO)
 JOIN TB_BOOK USING (BOOK_NO)
 WHERE ISSUE_DATE LIKE '07%';
 
 --13.
 CREATE OR REPLACE VIEW VW_BOOK_TRANSLATOR
 AS
 SELECT BOOK_NM "번역서 이름", WRITER_NM 역자
 FROM TB_BOOK_TRANSLATOR
 JOIN TB_WRITER USING (WRITER_NO)
 JOIN TB_BOOK USING (BOOK_NO)
 WHERE ISSUE_DATE LIKE '07%'
 WITH READ ONLY;
 
 SELECT * FROM VW_BOOK_TRANSLATOR;
 
 --14.
 INSERT INTO TB_PUBLISHER
 VALUES ('춘 출판사', '02-6710-3737', DEFAULT);
 COMMIT;
 
 --15.
 SELECT WRITER_NM, COUNT(*)
 FROM TB_WRITER
 GROUP BY WRITER_NM
 HAVING COUNT(*) >1;
 
 --16.
 SELECT *
 FROM TB_BOOK_AUTHOR
 WHERE COMPOSE_TYPE IS NULL;
 
 UPDATE TB_BOOK_AUTHOR
 SET COMPOSE_TYPE = '지음'
 WHERE COMPOSE_TYPE IS NULL;
 COMMIT;
 
 SELECT * FROM TB_BOOK_AUTHOR;
 
 --17 문자를 잘 이해 못 하겠음!!
 SELECT WRITER_NM "작가 이름", OFFICE_TELNO "사무실 번호"
 FROM TB_WRITER
 WHERE SUBSTR(OFFICE_TELNO, 1, 2) = '02'
 AND OFFICE_TELNO LIKE '__-___-%';
 
 --18.
 SELECT WRITER_NM "작가 이름"
 FROM TB_WRITER
 WHERE MONTHS_BETWEEN(TO_DATE('06/01/01', 'RR/MM/DD'), REGIST_DATE) / 12 >= 31
 ORDER BY 1;
 
 --19.
 SELECT BOOK_NM 도서명, PRICE 가격, 
        CASE
        WHEN STOCK_QTY < 5 THEN '추가주문필요'
        ELSE '소량보유'
        END "재고 수량"
FROM TB_BOOK
WHERE PUBLISHER_NM = '황금가지'
AND STOCK_QTY < 10
ORDER BY 1;

--20.
SELECT B.BOOK_NM 도서명, D.WRITER_NM 저자, E.WRITER_NM 역자
FROM TB_BOOK_AUTHOR A
JOIN TB_BOOK B ON (A.BOOK_NO = B.BOOK_NO)
JOIN TB_BOOK_TRANSLATOR C ON (B.BOOK_NO = C.BOOK_NO)
JOIN TB_WRITER D ON (A.WRITER_NO = D.WRITER_NO)
JOIN TB_WRITER E ON (C.WRITER_NO = E.WRITER_NO)
WHERE B.BOOK_NM = '아타트롤';
    
--21.
SELECT BOOK_NM 도서명, STOCK_QTY 재고수량, PRICE "가격(ORG)", (PRICE * 0.8) "가격(NEW)"
FROM TB_BOOK
WHERE MONTHS_BETWEEN(SYSDATE, ISSUE_DATE) / 12 >= 30
AND STOCK_QTY >= 90
ORDER BY 1;
